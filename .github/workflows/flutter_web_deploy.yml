name: Flutter Web Deploy

on:
  push:
    branches:
      - main  # Der Workflow wird bei jedem Push auf den 'main'-Branch ausgelöst

jobs:
  build:
    runs-on: ubuntu-latest  # Verwendung von Ubuntu als Runner

    steps:
      - name: Checkout code
        uses: actions/checkout@v4  # Klonen des Repositories auf den GitHub-Runner

      - name: Setup Flutter
        uses: subosito/flutter-action@v2  # Installation von Flutter auf dem Runner
        with:
          flutter-version: '3.29.2'  # Angabe der Flutter-Version

      - name: Install dependencies
        run: flutter pub get  # Installation der Flutter-Abhängigkeiten

      - name: Build Flutter Web
        run: flutter build web --release --web-renderer html # canvaskit  # Erstellen der Flutter-Web-App im Release-Modus

      - name: Deploy to Manitu (via FTP)
        uses: airvzxf/ftp-deployment-action@latest  # Verwendung der FTP-Deployment-Action
        with:
          server: ${{ secrets.MANITU_FTP_SERVER }}  # FTP-Server-Adresse (als Secret gespeichert)
          user: ${{ secrets.MANITU_FTP_USERNAME }}  # FTP-Benutzername (als Secret gespeichert)
          password: ${{ secrets.MANITU_FTP_PASSWORD }}  # FTP-Passwort (als Secret gespeichert)
          local_dir: ./build/web  # Lokales Verzeichnis mit den Web-Build-Dateien
          remote_dir: /web/flutter  # Zielverzeichnis auf dem Manitu-Server
          delete: true  # Löschen von Dateien im Remote-Verzeichnis, die nicht im lokalen Verzeichnis vorhanden sind